package 剑指offer;

import java.util.ArrayList;

//小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。
//但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。
//没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。现在把问题交给你,你能不能也很快的找出所有和为S的连续正数序列? Good Luck!
//输出所有和为S的连续正数序列。序列内按照从小至大的顺序，序列间按照开始数字从小到大的顺序

///*
/*初始化small=1，big=2;
*small到big序列和小于sum，big++; 大于sum，small++;
*当small增加到(1+sum)/2是停止
*/
public class N022和为S的连续正数序列 {
	 public ArrayList<ArrayList<Integer>> FindContinuousSequence(int sum) {
		 ArrayList<ArrayList<Integer>> lists=new ArrayList<ArrayList<Integer>>();
		 if(sum<=1) return lists;
		 int low=1;
		 int high=2;
		 
		 while(low<(1+sum)/2) {
			 int n=getsum(low,high);
			 if(n==sum) {
				 ArrayList<Integer> list=new ArrayList<>();
				 for(int i=low;i<=high;i++){
					 list.add(i);
				 }
				 lists.add(list);
				 low++;
				 high++;
			 }
			 else if(n<sum) {
				 high++;
			 }
			 else low++;
		 }
		 
		 return lists;
	 }
	 
	 public int getsum(int low,int high) {
		 int n=0;
		 for(int i=low;i<=high;i++) {
			 n+=i;
		 }
		 return n;
	 }
}
